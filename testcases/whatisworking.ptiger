/* Programa em Tiger contendo exemplos das funcionalidades implementadas - Escrito por Paulo Alexandre Panucci */

let
    /*Declarações implícitas e explícitas*/
    var intImplicito := 5
    var intExplicito : int := 2

    var realImplicito := 1.5
    var realExplicito : real := 2.5

    var stringImplicita := "String Implicita"
    var stringExplicita : string := "String Explicita"

    /*Declarações de tipo*/
    type myInt : int
    type myReal : real
    type myString : string
    var tipoInt : myInt := 10
    var tipoReal : myReal := 10.5
    var tipoString : myString := "Tipo String"

    type myArrayi = array of int
    type myArrayr = array of real
    var arrayi := myArrayi[4]
    var arrayr := myArrayr[4]
    var matrixi := myArrayi[4][4]
    var matrixr := myArrayr[4][4]

    type myRecord = {i: int, r: real, s: string}
    var rec : myRecord := {rec.i := 1, rec.r := 1.5, rec.s := "campo string de rec"}

    function fooexample() = (
        print_string("Este e um exemplo de funcao..."); println();
        print_string("Devido a problemas, não se consegue linkar o corpo de expressoes internas do tiger ao corpo de uma funcao, porem consegue-se chamar funcoes externas..."); println();
        print_string("Exemplo: chamando a funcao print_hello_ptiger():"); println();
        print_hello_ptiger(); println();
        print_string("Exemplo: printando um inteiro com print_integer():"); println();
        print_integer(10); println();
    )

in

    /*Mostrando a parte de declarações implícitas e explícitas*/
    print_string("Mostrando a parte de declaracoes implicitas e explicitas"); println();
    print_string("Inteiros: "); print_integer(intImplicito); print_string("(implicito) ");
        print_integer(intExplicito); print_string("(explicito)"); println();

    print_string("Reais: "); print_real(realImplicito); print_string("(implicito) ");
        print_real(realExplicito); print_string("(explicito)"); println();

    print_string("String: "); print_string(stringImplicita); print_string("(implicito) ");
        print_string(stringExplicita); print_string("(explicito)"); println();
    println();

    /*Mostrando a parte de declarações de tipo*/
    print_string("Mostrando a parte de declaracoes de tipo"); println();
    print_string("Tipo inteiro: "); print_integer(tipoInt); println();
    print_string("Tipo real: "); print_real(tipoReal); println();
    print_string("Tipo string: "); print_string(tipoString); println();
    println();

    for i := 0 to 3 do (
        arrayi[i] := 1;
        arrayr[i] := 1.33;
        for j := 0 to 3 do (
            matrixi[i][j] := 2;
            matrixr[i][j] := 2.33;
        );
    );

    /*Printando arrays, matrizes e record*/
    print_string("arrayi:"); println();
    for i := 0 to 3 do (
        print_integer(arrayi[i]);
        print_string(" ");
    );
    println(); println();
    print_string("arrayr:"); println();
    for i := 0 to 3 do (
        print_real(arrayr[i]);
        print_string(" ");
    );
    println(); println();
    print_string("matrixi:"); println();
    for i := 0 to 3 do (
        for j := 0 to 3 do (
            print_integer(matrixi[i][j]);
            print_string(" ");
        );
        println();
    );
    println();
    print_string("matrixr:"); println();
    for i := 0 to 3 do (
        for j := 0 to 3 do (
            print_real(matrixr[i][j]);
            print_string(" ");
        );
        println();
    );
    println();
    print_string("rec:"); println();
    print_string("rec.i: "); print_integer(rec.i); println();
    print_string("rec.r: "); print_real(rec.r); println();
    print_string("rec.s: "); print_string(rec.s); println(); println();

    fooexample(); println();

    print_string("Mostrando a parte do WHILE (contador de 5 a 1):");  println();
    while intImplicito <> 0 do (
        print_integer(intImplicito); print_string(" ");
        intImplicito := intImplicito - 1
    );
    println(); println();

    print_string("Mostrando a parte do IF"); println();
    if intImplicito = 0 then print_string("Entrei na condicao do THEN do IF");

    if intImplicito <> 0 then
        print_string("Entrei na condicao do THEN do IF 2")
    else (
        print_string("Entrei na condicao do ELSE do IF 2");
        println();
        /*exemplo de expressoes aninhadas no corpo do else (pode ocorrer no corpo do if)*/
        intImplicito := intImplicito + 2;
        intImplicito := intImplicito * 2 + 1;
        print_string("exemplo de sequencia de expressoes dentro do corpo do else"); println();
        print_integer(intImplicito);
    );

end
